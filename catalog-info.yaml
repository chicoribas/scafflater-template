# @scf-option  {"ignore": "true"}
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: pdd-template-external-test
  title: External Test
  description: Create an Apigee Proxy 
  tags: ["docker"]
spec:
  owner: pdd-team
  type: service

  
  parameters:
    - title: General info
      required:
        - githubUser
        - domain
        - system
        - team
        - component
        - componentDescription
        - openapi-file
      description: |
        # WARNING
        The spec file has some requirements. Please check the requirements on [Apigee Doc](https://sites.google.com/grupoboticario.com.br/engenhariadesoftware/padr%C3%B5es/apis/apigee?authuser=0) before continue. 
      properties:
        githubUser:
          title: Github User
          description: This user will be used as committer
          type: object
          ui:field: GBTechGetGithubUserInfo
        domain:
          title: Domain / Value Stream
          type: string
          ui:autofocus: true
          ui:field: GbEntityPicker
          ui:options:
            allowedKinds:
              - Domain
            defaultKind: Domain
            allowNewValue: false
        system:
          title: System, Project or Product
          type: string
          ui:field: GbEntityPicker
          ui:options:
            allowedKinds:
              - System
            defaultKind: System
            allowNewValue: false
        team:
          title: Github Team
          type: string
          description: Select the team that will be responsible for this repository
          ui:field: GbEntityPicker
          ui:options:
            allowedKinds:
              - Group
            defaultKind: Group
            allowNewValue: false
        component:
          title: Proxy Name
          type: string
          pattern: '^(px-)[a-z0-9-]{3,}[a-z]$'
          "ui:help": "Warning! Your proxy name MUST start with 'px-'"
          description: >
            The proxy name
        componentDescription:
          title: Proxy Description
          type: string
          description: Describe in few words your new proxy
        openapi-file:
          title: Upload Open API
          description: |
            Select the file spec open api swagger 
          type: string
          ui:widget: file
          ui:backstage:
            review:
              show: false
  
  steps: 
    - id: parse-open-api
      name: Init parse swagger open api
      action: gb-tech:parse-open-api-yml-to-json
      input: 
        fileContent: ${{parameters['openapi-file']}}
        proxyName: ${{parameters.component}}
        descritptionProxy: ${{parameters.componentDescription}}
        emailResponsible: ${{parameters.githubUser.email}}
        
    - id: vars
      name: Load Domain Vars
      action: gb-tech:get-vars
      input:
        parameters: ${{parameters}}
        domain: ${{ parameters.domain }}
        system: ${{ parameters.system }}
        component: ${{ parameters.component }}
        sonarProjectId: ${{ steps.sonar.output.projectId }}
        team: ${{ parameters.team }}
        additionalParameters: 
          lifecycle: "experimental"
          hasArgocd: false
          hasNewRelic: false
    - id: github-app-token
      name: Get Github App Tokens
      action: gb-tech:get-github-app-token
      input:
        accountLogin: ${{steps.vars.output.github.orgName}}

    - id: scafflater-init
      name: Init code template
      action: gb-tech:scafflater-init
      input:
        repo: "https://github.com/${{steps.vars.output.github.orgName}}/pdd-template-apigee"
        parameters: ${{steps.vars.output.parameters}}
        additionalParameters: ${{steps['parse-open-api'].output.parameters}}
        config: 
          githubUsername: "x-access-token"
          githubPassword: ${{ steps['github-app-token'].output.accessToken }}
          annotate: false
          
    - id: scafflater-init-github
      name: Configuring Github
      action: gb-tech:scafflater-init
      input:
        repo: "https://github.com/${{steps.vars.output.github.orgName}}/pdd-template-github"
        parameters: ${{steps.vars.output.parameters}}
        config:
          githubUsername: "x-access-token"
          githubPassword: ${{ steps['github-app-token'].output.accessToken }}
          annotate: false
          
    - id: scafflater-init-backstage
      name: Init Backstage Configuration
      action: gb-tech:scafflater-init
      input:
        repo: "https://github.com/${{steps.vars.output.github.orgName}}/pdd-template-backstage"
        parameters: ${{steps.vars.output.parameters}}
        config:
          githubUsername: "x-access-token"
          githubPassword: ${{ steps['github-app-token'].output.accessToken }}
          annotate: false
          
    - id: scafflater-catalog-info
      name: Generate "catalog-info.yaml"
      action: gb-tech:scafflater-add-partial
      input:
        templateName: "pdd-template-backstage"
        partial: "catalog:configure"
        parameters: ${{steps.vars.output.parameters}}
        config: 
          githubUsername: "x-access-token"
          githubPassword: ${{ steps['github-app-token'].output.accessToken }}
          annotate: false
     
    - id: create-repo
      name: Create repo
      action: gb-tech:initialize-repo
      input:
        owner: ${{steps.vars.output.github.orgName}}
        repo: ${{steps.vars.output.github.repoName}}
        description: ${{parameters.componentDescription}}
        type: "app-backend"
        template: "${{steps.vars.output.github.orgName}}/pdd-template-apigee"
        domain: ${{parameters.domain}}
        team: ${{parameters.team}}
        committerEmail: ${{parameters.githubUser.email}}
        committerName: ${{parameters.githubUser.displayName}}

    - id: add-plataforma-integracao-reviewer
      name: Add Plataforma Integracao as Github Reviewer
      action: gb-tech:add-github-reviewers
      input:
        owner: ${{steps.vars.output.github.orgName}}
        repo: ${{steps.vars.output.github.repoName}}
        teams: 'plataforma-integracao'
        env: 'prd'

    - id: register
      name: Register New System
      action: catalog:register
      input:
        repoContentsUrl: "${{steps.vars.output.github.repoUrl}}/blob/main"
        catalogInfoPath: "/catalog-info.yaml"
        
  output:
    links:
     - title: Repository
       url: ${{ steps.vars.output.github.repoUrl }}
     - title: Open in catalog
       icon: catalog
       entityRef: ${{ steps.register.output.entityRef }}
